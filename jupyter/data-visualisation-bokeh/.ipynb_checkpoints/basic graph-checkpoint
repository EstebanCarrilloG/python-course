{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "3adf85d5-965d-44aa-abd8-ba539379ae8b",
   "metadata": {},
   "outputs": [],
   "source": [
    "from bokeh.plotting import figure\n",
    "from bokeh.io import output_file, show\n",
    "\n",
    "x = [1,2,3,4,5,]\n",
    "y = [6,7,8,9,10]\n",
    "\n",
    "output_file(\"line.html\")\n",
    "#create figure object\n",
    "f=figure()\n",
    "\n",
    "#create line plot\n",
    "f.line(x,y)\n",
    "\n",
    "show(f)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "087b487b-e909-4988-a69c-47accd48c67d",
   "metadata": {},
   "outputs": [],
   "source": [
    "a=[3,7.5,10]\n",
    "b=[3,6,9]\n",
    "\n",
    "output_file(\"triangle.html\")\n",
    "f=figure()\n",
    "\n",
    "f.scatter(a,b,marker='triangle')\n",
    "show(f)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "9db92c9d-4ef4-4e6f-9410-273b1af74f2c",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "output_file(\"circle.html\")\n",
    "f=figure()\n",
    "\n",
    "f.scatter(a,b,marker='circle')\n",
    "show(f)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "406bab04-2520-492a-b6be-66997bb128c1",
   "metadata": {},
   "outputs": [],
   "source": [
    "#bokeh + pandas\n",
    "from bokeh.plotting import figure\n",
    "from bokeh.io import output_file, show\n",
    "import pandas\n",
    "\n",
    "df=pandas.read_csv(\"data.csv\")\n",
    "x = df[\"x\"]\n",
    "y = df[\"y\"]\n",
    "\n",
    "\n",
    "output_file(\"line.html\")\n",
    "#create figure object\n",
    "f=figure()\n",
    "\n",
    "#create line plot\n",
    "f.line(x,y)\n",
    "\n",
    "show(f)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "d9027289-352a-4703-ac11-07041e5ca6db",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Exercise: Plotting Education Data\n",
    "from bokeh.plotting import figure\n",
    "from bokeh.io import output_file, show\n",
    "import pandas\n",
    "\n",
    "df=pandas.read_csv(\"bachelors.csv\")\n",
    "x = df[\"Year\"]\n",
    "y = df[\"Engineering\"]\n",
    "\n",
    "\n",
    "output_file(\"education-data.html\")\n",
    "#create figure object\n",
    "f=figure()\n",
    "\n",
    "#create line plot\n",
    "f.line(x,y)\n",
    "\n",
    "show(f)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "1e29a115-6876-4cc3-935e-d05fb32fe93c",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Exercise: Plotting Weather Data\n",
    "from bokeh.plotting import figure\n",
    "from bokeh.io import output_file, show\n",
    "import pandas\n",
    "\n",
    "df=pandas.read_excel(\"verlegenhuken.xlsx\")\n",
    "\n",
    "x = df[\"Temperature\"] / 10\n",
    "y = df[\"Pressure\"] / 10\n",
    "\n",
    "output_file(\"weather-data.html\")\n",
    "#create figure object\n",
    "f=figure()\n",
    "\n",
    "f.title.text=\"Temperature and air Pressure\"\n",
    "f.title.text_color=\"Gray\"\n",
    "f.title.text_font=\"times\"\n",
    "f.title.text_font_style=\"bold\"\n",
    "f.xaxis.minor_tick_line_color=None\n",
    "f.yaxis.minor_tick_line_color=None\n",
    "f.xaxis.axis_label=\"Temperature\"\n",
    "f.yaxis.axis_label=\"Pressure\"  \n",
    "\n",
    "\n",
    "#create line plot\n",
    "f.scatter(x,y,marker='circle',size=1)\n",
    "\n",
    "show(f)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "7ade5e48-7ead-4e87-9ceb-e205d6b607e5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Help on method scatter in module bokeh.plotting.glyph_api:\n",
      "\n",
      "scatter(*args: 'Any', **kwargs: 'Any') -> 'GlyphRenderer' method of bokeh.plotting._figure.figure instance\n",
      "    Creates a scatter plot of the given x and y items.\n",
      "    \n",
      "    Args:\n",
      "        x (str or seq[float]) : values or field names of center x coordinates\n",
      "    \n",
      "        y (str or seq[float]) : values or field names of center y coordinates\n",
      "    \n",
      "        size (str or list[float]) : values or field names of sizes in |screen units|\n",
      "    \n",
      "        marker (str, or list[str]): values or field names of marker types\n",
      "    \n",
      "        color (color value, optional): shorthand to set both fill and line color\n",
      "    \n",
      "        source (:class:`~bokeh.models.sources.ColumnDataSource`) : a user-supplied data source.\n",
      "            An attempt will be made to convert the object to :class:`~bokeh.models.sources.ColumnDataSource`\n",
      "            if needed. If none is supplied, one is created for the user automatically.\n",
      "    \n",
      "        **kwargs: |line properties| and |fill properties|\n",
      "    \n",
      "    Examples:\n",
      "    \n",
      "        >>> p.scatter([1,2,3],[4,5,6], marker=\"square\", fill_color=\"red\")\n",
      "        >>> p.scatter(\"data1\", \"data2\", marker=\"mtype\", source=data_source, ...)\n",
      "    \n",
      "    .. note::\n",
      "        ``Scatter`` markers with multiple marker types may be drawn in a\n",
      "        different order when using the WebGL output backend. This is an explicit\n",
      "        trade-off made in the interests of performance.\n",
      "\n"
     ]
    }
   ],
   "source": [
    "help(f.scatter)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
